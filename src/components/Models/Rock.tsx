/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 rock.gltf --transform --types
*/
import * as THREE from "three";
import { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { Group } from "three";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
  };
};

export function Rock(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/rock-transformed.glb") as GLTFResult;
  const groupRef = useRef<Group>(null!);

  useFrame((_, delta) => {
    groupRef.current.rotation.y += delta;
    groupRef.current.rotation.x += delta;
  });

  return (
    <group {...props} ref={groupRef} dispose={null}>
      <mesh geometry={nodes.Cube.geometry} material={materials.Material} onClick={(e) => console.log(e.target)} />
    </group>
  );
}

useGLTF.preload("/rock-transformed.glb");
